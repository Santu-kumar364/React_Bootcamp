{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANTU KUMAR\\\\react_bootcamp\\\\chap5\\\\src\\\\context\\\\DataContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport api from \"../api/api\"; // Import Axios instance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext({});\nexport const DataProvider = ({\n  children\n}) => {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [editTitle, setEditTitle] = useState(\"\");\n  const [editBody, setEditBody] = useState(\"\");\n  const [fetchError, setFetchError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Fetch Posts\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await api.get(\"/posts\");\n        setPosts(response.data);\n        setFetchError(null);\n      } catch (error) {\n        setFetchError(\"Failed to fetch posts\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchPosts();\n  }, []);\n\n  // Add Post\n  const handleAddPost = async (title, body) => {\n    const newPost = {\n      title,\n      body,\n      datetime: new Date().toLocaleString()\n    };\n    try {\n      const response = await api.post(\"/posts\", newPost);\n      setPosts([...posts, response.data]);\n      navigate(\"/\");\n    } catch (error) {\n      console.error(\"Error adding post:\", error);\n    }\n  };\n\n  // Delete Post\n  const handleDelete = async id => {\n    try {\n      await api.delete(`/posts/${id}`);\n      setPosts(posts.filter(post => post.id !== id));\n      navigate(\"/\");\n    } catch (error) {\n      console.error(\"Error deleting post:\", error);\n    }\n  };\n\n  // Edit Post\n  const handleEdit = async id => {\n    const updatedPost = {\n      title: editTitle,\n      body: editBody,\n      datetime: new Date().toLocaleString()\n    };\n    try {\n      await api.put(`/posts/${id}`, updatedPost);\n      setPosts(posts.map(post => post.id === id ? updatedPost : post));\n      navigate(\"/\");\n    } catch (error) {\n      console.error(\"Error updating post:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      search,\n      setSearch,\n      posts,\n      setPosts,\n      handleAddPost,\n      handleDelete,\n      handleEdit,\n      editTitle,\n      setEditTitle,\n      editBody,\n      setEditBody,\n      fetchError,\n      isLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(DataProvider, \"VibrAjh2/x+/qcrZ9bxwwlpZQ/A=\", false, function () {\n  return [useNavigate];\n});\n_c = DataProvider;\nexport default DataContext;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useNavigate","api","jsxDEV","_jsxDEV","DataContext","DataProvider","children","_s","search","setSearch","posts","setPosts","editTitle","setEditTitle","editBody","setEditBody","fetchError","setFetchError","isLoading","setIsLoading","navigate","fetchPosts","response","get","data","error","handleAddPost","title","body","newPost","datetime","Date","toLocaleString","post","console","handleDelete","id","delete","filter","handleEdit","updatedPost","put","map","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SANTU KUMAR/react_bootcamp/chap5/src/context/DataContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport api from \"../api/api\"; // Import Axios instance\r\n\r\nconst DataContext = createContext({});\r\n\r\nexport const DataProvider = ({ children }) => {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [posts, setPosts] = useState([]);\r\n    const [editTitle, setEditTitle] = useState(\"\");\r\n    const [editBody, setEditBody] = useState(\"\");\r\n    const [fetchError, setFetchError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // Fetch Posts\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const response = await api.get(\"/posts\");\r\n                setPosts(response.data);\r\n                setFetchError(null);\r\n            } catch (error) {\r\n                setFetchError(\"Failed to fetch posts\");\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    // Add Post\r\n    const handleAddPost = async (title, body) => {\r\n        const newPost = { title, body, datetime: new Date().toLocaleString() };\r\n        try {\r\n            const response = await api.post(\"/posts\", newPost);\r\n            setPosts([...posts, response.data]);\r\n            navigate(\"/\");\r\n        } catch (error) {\r\n            console.error(\"Error adding post:\", error);\r\n        }\r\n    };\r\n\r\n    // Delete Post\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            await api.delete(`/posts/${id}`);\r\n            setPosts(posts.filter(post => post.id !== id));\r\n            navigate(\"/\");\r\n        } catch (error) {\r\n            console.error(\"Error deleting post:\", error);\r\n        }\r\n    };\r\n\r\n    // Edit Post\r\n    const handleEdit = async (id) => {\r\n        const updatedPost = { title: editTitle, body: editBody, datetime: new Date().toLocaleString() };\r\n        try {\r\n            await api.put(`/posts/${id}`, updatedPost);\r\n            setPosts(posts.map(post => (post.id === id ? updatedPost : post)));\r\n            navigate(\"/\");\r\n        } catch (error) {\r\n            console.error(\"Error updating post:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <DataContext.Provider value={{\r\n            search, setSearch,\r\n            posts, setPosts,\r\n            handleAddPost, handleDelete, handleEdit,\r\n            editTitle, setEditTitle,\r\n            editBody, setEditBody,\r\n            fetchError, isLoading\r\n        }}>\r\n            {children}\r\n        </DataContext.Provider>\r\n    );\r\n};\r\n\r\nexport default DataContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
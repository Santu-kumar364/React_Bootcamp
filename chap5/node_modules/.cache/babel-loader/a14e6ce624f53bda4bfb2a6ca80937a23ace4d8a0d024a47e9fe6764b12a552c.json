{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nconst useAxiosFetch = dataUrl => {\n  _s();\n  const [data, setData] = useState([]);\n  const [fetchError, setFetchError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    let isMounted = true;\n    const source = axios.CancelToken.source();\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(dataUrl, {\n          cancelToken: source.token\n        });\n        if (isMounted) {\n          setData(response.data);\n          setFetchError(null);\n        }\n      } catch (err) {\n        if (isMounted) {\n          setFetchError(err.message);\n          setData([]);\n        }\n      } finally {\n        isLoading && setIsLoading(false);\n      }\n    };\n    fetchData();\n    return () => {\n      isMounted = false;\n      source.cancel();\n    };\n  }, [dataUrl]);\n  return {\n    data,\n    fetchError,\n    isLoading\n  };\n};\n_s(useAxiosFetch, \"+XJtC1F4PrEeMvccO02DD8cTlfg=\");\nexport default useAxiosFetch;","map":{"version":3,"names":["useState","useEffect","axios","useAxiosFetch","dataUrl","_s","data","setData","fetchError","setFetchError","isLoading","setIsLoading","isMounted","source","CancelToken","fetchData","response","get","cancelToken","token","err","message","cancel"],"sources":["C:/Users/SANTU KUMAR/react_bootcamp/chap5/src/hooks/useAxiosFetch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useAxiosFetch = (dataUrl) => {\r\n    const [data, setData] = useState([]);\r\n    const [fetchError, setFetchError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        const source = axios.CancelToken.source();\r\n\r\n        const fetchData = async () => {\r\n            setIsLoading(true);\r\n            try {\r\n                const response = await axios.get(dataUrl, { cancelToken: source.token });\r\n                if (isMounted) {\r\n                    setData(response.data);\r\n                    setFetchError(null);\r\n                }\r\n            } catch (err) {\r\n                if (isMounted) {\r\n                    setFetchError(err.message);\r\n                    setData([]);\r\n                }\r\n            } finally {\r\n                isLoading && setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n\r\n        return () => {\r\n            isMounted = false;\r\n            source.cancel();\r\n        };\r\n    }, [dataUrl]);\r\n\r\n    return { data, fetchError, isLoading };\r\n};\r\n\r\nexport default useAxiosFetch;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAIC,OAAO,IAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACZ,IAAIW,SAAS,GAAG,IAAI;IACpB,MAAMC,MAAM,GAAGX,KAAK,CAACY,WAAW,CAACD,MAAM,CAAC,CAAC;IAEzC,MAAME,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1BJ,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACA,MAAMK,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAACb,OAAO,EAAE;UAAEc,WAAW,EAAEL,MAAM,CAACM;QAAM,CAAC,CAAC;QACxE,IAAIP,SAAS,EAAE;UACXL,OAAO,CAACS,QAAQ,CAACV,IAAI,CAAC;UACtBG,aAAa,CAAC,IAAI,CAAC;QACvB;MACJ,CAAC,CAAC,OAAOW,GAAG,EAAE;QACV,IAAIR,SAAS,EAAE;UACXH,aAAa,CAACW,GAAG,CAACC,OAAO,CAAC;UAC1Bd,OAAO,CAAC,EAAE,CAAC;QACf;MACJ,CAAC,SAAS;QACNG,SAAS,IAAIC,YAAY,CAAC,KAAK,CAAC;MACpC;IACJ,CAAC;IAEDI,SAAS,CAAC,CAAC;IAEX,OAAO,MAAM;MACTH,SAAS,GAAG,KAAK;MACjBC,MAAM,CAACS,MAAM,CAAC,CAAC;IACnB,CAAC;EACL,CAAC,EAAE,CAAClB,OAAO,CAAC,CAAC;EAEb,OAAO;IAAEE,IAAI;IAAEE,UAAU;IAAEE;EAAU,CAAC;AAC1C,CAAC;AAACL,EAAA,CApCIF,aAAa;AAsCnB,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
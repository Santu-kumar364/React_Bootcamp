{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANTU KUMAR\\\\react_bootcamp\\\\chap5\\\\src\\\\context\\\\DataContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext({});\nexport const DataProvider = ({\n  children\n}) => {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [editTitle, setEditTitle] = useState(\"\");\n  const [editBody, setEditBody] = useState(\"\");\n  const navigate = useNavigate();\n  const handleAddPost = (title, body) => {\n    const newPost = {\n      id: posts.length + 1,\n      // Generate a unique ID\n      title,\n      body,\n      datetime: new Date().toLocaleString()\n    };\n    setPosts([...posts, newPost]);\n    navigate(\"/\");\n  };\n  const handleDelete = id => {\n    setPosts(posts.filter(post => post.id !== id));\n    navigate(\"/\");\n  };\n  const handleEdit = id => {\n    const updatedPosts = posts.map(post => post.id === id ? {\n      ...post,\n      title: editTitle,\n      body: editBody,\n      datetime: new Date().toLocaleString()\n    } : post);\n    setPosts(updatedPosts);\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      search,\n      setSearch,\n      posts,\n      setPosts,\n      handleAddPost,\n      handleDelete,\n      handleEdit,\n      editTitle,\n      setEditTitle,\n      editBody,\n      setEditBody\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(DataProvider, \"tJNu+KixMStXh0yZ4/3cTVhMDR4=\", false, function () {\n  return [useNavigate];\n});\n_c = DataProvider;\nexport default DataContext;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["createContext","useState","useNavigate","jsxDEV","_jsxDEV","DataContext","DataProvider","children","_s","search","setSearch","posts","setPosts","editTitle","setEditTitle","editBody","setEditBody","navigate","handleAddPost","title","body","newPost","id","length","datetime","Date","toLocaleString","handleDelete","filter","post","handleEdit","updatedPosts","map","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SANTU KUMAR/react_bootcamp/chap5/src/context/DataContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst DataContext = createContext({});\r\n\r\nexport const DataProvider = ({ children }) => {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [posts, setPosts] = useState([]);\r\n    const [editTitle, setEditTitle] = useState(\"\");\r\n    const [editBody, setEditBody] = useState(\"\");\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleAddPost = (title, body) => {\r\n        const newPost = {\r\n            id: posts.length + 1, // Generate a unique ID\r\n            title,\r\n            body,\r\n            datetime: new Date().toLocaleString(),\r\n        };\r\n        setPosts([...posts, newPost]);\r\n        navigate(\"/\");\r\n    };\r\n\r\n    const handleDelete = (id) => {\r\n        setPosts(posts.filter(post => post.id !== id));\r\n        navigate(\"/\");\r\n    };\r\n\r\n    const handleEdit = (id) => {\r\n        const updatedPosts = posts.map(post =>\r\n            post.id === id ? { ...post, title: editTitle, body: editBody, datetime: new Date().toLocaleString() } : post\r\n        );\r\n        setPosts(updatedPosts);\r\n        navigate(\"/\");\r\n    };\r\n\r\n    return (\r\n        <DataContext.Provider value={{\r\n            search, setSearch,\r\n            posts, setPosts,\r\n            handleAddPost, handleDelete, handleEdit,\r\n            editTitle, setEditTitle,\r\n            editBody, setEditBody\r\n        }}>\r\n            {children}\r\n        </DataContext.Provider>\r\n    );\r\n};\r\n\r\nexport default DataContext;\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC,CAAC,CAAC;AAErC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMgB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAMgB,aAAa,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK;IACnC,MAAMC,OAAO,GAAG;MACZC,EAAE,EAAEX,KAAK,CAACY,MAAM,GAAG,CAAC;MAAE;MACtBJ,KAAK;MACLC,IAAI;MACJI,QAAQ,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC;IACxC,CAAC;IACDd,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEU,OAAO,CAAC,CAAC;IAC7BJ,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC;EAED,MAAMU,YAAY,GAAIL,EAAE,IAAK;IACzBV,QAAQ,CAACD,KAAK,CAACiB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACP,EAAE,KAAKA,EAAE,CAAC,CAAC;IAC9CL,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC;EAED,MAAMa,UAAU,GAAIR,EAAE,IAAK;IACvB,MAAMS,YAAY,GAAGpB,KAAK,CAACqB,GAAG,CAACH,IAAI,IAC/BA,IAAI,CAACP,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGO,IAAI;MAAEV,KAAK,EAAEN,SAAS;MAAEO,IAAI,EAAEL,QAAQ;MAAES,QAAQ,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC;IAAE,CAAC,GAAGG,IAC5G,CAAC;IACDjB,QAAQ,CAACmB,YAAY,CAAC;IACtBd,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC;EAED,oBACIb,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MACzBzB,MAAM;MAAEC,SAAS;MACjBC,KAAK;MAAEC,QAAQ;MACfM,aAAa;MAAES,YAAY;MAAEG,UAAU;MACvCjB,SAAS;MAAEC,YAAY;MACvBC,QAAQ;MAAEC;IACd,CAAE;IAAAT,QAAA,EACGA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAC9B,EAAA,CA3CWF,YAAY;EAAA,QAMJJ,WAAW;AAAA;AAAAqC,EAAA,GANnBjC,YAAY;AA6CzB,eAAeD,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANTU KUMAR\\\\react_bootcamp\\\\chap4\\\\src\\\\EditPost.js\",\n  _s = $RefreshSig$();\n// import React from 'react'\n// import { useEffect } from 'react'\n// import { useParams, Link, useOutletContext } from 'react-router-dom'\n\n// const EditPost = () => {\n\n//     const { posts, handleEdit, editBody, setEditBody, editTitle, setEditTitle } = useOutletContext();\n//     const { id } = useParams();\n//     // const post = posts.find(post => (post.id).toString() === id);\n//     const post = posts?.length ? posts.find(p => p.id.toString() === id) : null;\n\n//     useEffect(() => {\n//         if (post) {\n//             setEditTitle(post.title);\n//             setEditBody(post.body);\n//         } else {\n//             setEditTitle(\"\");\n//             setEditBody(\"\");\n//         }\n//     }, [post, setEditTitle, setEditBody]);\n\n//     return (\n//         <main className='NewPost'>\n//             {editTitle &&\n//                 <>\n//                     <h2>Edit Post</h2>\n//                     <form className=\"newPostForm\" onSubmit={(e) => { e.preventDefault(); handleEdit(post.id); }}>\n//                         <label htmlFor='postTitle'>Title:</label>\n//                         <input\n//                             id='postTitle'\n//                             type='text'\n//                             value={editTitle}\n//                             onChange={(e) => setEditTitle(e.target.value)}\n//                         />\n//                         <label htmlFor='postBody'>Post:</label>\n//                         <textarea\n//                             id='postBody'\n//                             required\n//                             value={editBody}\n//                             onChange={(e) => setEditBody(e.target.value)}\n//                         />\n//                         <button type='submit'  >Submit</button>\n//                     </form>\n//                 </>\n//             }\n//             {!post &&\n//                 <>\n//                     <h2>Post Not Found</h2>\n//                     <p>Well, that's disappointing</p>\n//                     <p>\n//                         <Link to='/'>Visit Our Homepage</Link>\n//                     </p>\n//                 </>\n//             }\n//         </main>\n//     )\n// }\n\n// export default EditPost\n\nimport React, { useEffect } from 'react';\nimport { useParams, Link, useOutletContext, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditPost = () => {\n  _s();\n  const {\n    posts,\n    handleEdit,\n    editBody,\n    setEditBody,\n    editTitle,\n    setEditTitle\n  } = useOutletContext();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const post = posts !== null && posts !== void 0 && posts.length ? posts.find(p => p.id.toString() === id) : null;\n  useEffect(() => {\n    if (post) {\n      setEditTitle(post.title);\n      setEditBody(post.body);\n    } else {\n      setEditTitle(\"\");\n      setEditBody(\"\");\n    }\n  }, [post, setEditTitle, setEditBody]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (post) {\n      handleEdit(post.id);\n      navigate('/'); // Redirect after update\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"NewPost\",\n    children: post ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"newPostForm\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\",\n          type: \"text\",\n          value: editTitle,\n          onChange: e => setEditTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postBody\",\n          children: \"Post:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"postBody\",\n          required: true,\n          value: editBody,\n          onChange: e => setEditBody(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Post Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Well, that's disappointing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Visit Our Homepage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(EditPost, \"i6nhVjPg73TwxbRUExRf86waak8=\", false, function () {\n  return [useOutletContext, useParams, useNavigate];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useEffect","useParams","Link","useOutletContext","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","EditPost","_s","posts","handleEdit","editBody","setEditBody","editTitle","setEditTitle","id","navigate","post","length","find","p","toString","title","body","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","required","to","_c","$RefreshReg$"],"sources":["C:/Users/SANTU KUMAR/react_bootcamp/chap4/src/EditPost.js"],"sourcesContent":["// import React from 'react'\r\n// import { useEffect } from 'react'\r\n// import { useParams, Link, useOutletContext } from 'react-router-dom'\r\n\r\n// const EditPost = () => {\r\n\r\n//     const { posts, handleEdit, editBody, setEditBody, editTitle, setEditTitle } = useOutletContext();\r\n//     const { id } = useParams();\r\n//     // const post = posts.find(post => (post.id).toString() === id);\r\n//     const post = posts?.length ? posts.find(p => p.id.toString() === id) : null;\r\n\r\n//     useEffect(() => {\r\n//         if (post) {\r\n//             setEditTitle(post.title);\r\n//             setEditBody(post.body);\r\n//         } else {\r\n//             setEditTitle(\"\");\r\n//             setEditBody(\"\");\r\n//         }\r\n//     }, [post, setEditTitle, setEditBody]);\r\n    \r\n\r\n\r\n     \r\n//     return (\r\n//         <main className='NewPost'>\r\n//             {editTitle &&\r\n//                 <>\r\n//                     <h2>Edit Post</h2>\r\n//                     <form className=\"newPostForm\" onSubmit={(e) => { e.preventDefault(); handleEdit(post.id); }}>\r\n//                         <label htmlFor='postTitle'>Title:</label>\r\n//                         <input\r\n//                             id='postTitle'\r\n//                             type='text'\r\n//                             value={editTitle}\r\n//                             onChange={(e) => setEditTitle(e.target.value)}\r\n//                         />\r\n//                         <label htmlFor='postBody'>Post:</label>\r\n//                         <textarea\r\n//                             id='postBody'\r\n//                             required\r\n//                             value={editBody}\r\n//                             onChange={(e) => setEditBody(e.target.value)}\r\n//                         />\r\n//                         <button type='submit'  >Submit</button>\r\n//                     </form>\r\n//                 </>\r\n//             }\r\n//             {!post &&\r\n//                 <>\r\n//                     <h2>Post Not Found</h2>\r\n//                     <p>Well, that's disappointing</p>\r\n//                     <p>\r\n//                         <Link to='/'>Visit Our Homepage</Link>\r\n//                     </p>\r\n//                 </>\r\n//             }\r\n//         </main>\r\n//     )\r\n// }\r\n\r\n// export default EditPost\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useParams, Link, useOutletContext, useNavigate } from 'react-router-dom';\r\n\r\nconst EditPost = () => {\r\n    const { posts, handleEdit, editBody, setEditBody, editTitle, setEditTitle } = useOutletContext();\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const post = posts?.length ? posts.find(p => p.id.toString() === id) : null;\r\n\r\n    useEffect(() => {\r\n        if (post) {\r\n            setEditTitle(post.title);\r\n            setEditBody(post.body);\r\n        } else {\r\n            setEditTitle(\"\");\r\n            setEditBody(\"\");\r\n        }\r\n    }, [post, setEditTitle, setEditBody]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (post) {\r\n            handleEdit(post.id);\r\n            navigate('/');  // Redirect after update\r\n        }\r\n    };\r\n\r\n    return (\r\n        <main className='NewPost'>\r\n            {post ? (\r\n                <>\r\n                    <h2>Edit Post</h2>\r\n                    <form className=\"newPostForm\" onSubmit={handleSubmit}>\r\n                        <label htmlFor='postTitle'>Title:</label>\r\n                        <input\r\n                            id='postTitle'\r\n                            type='text'\r\n                            value={editTitle}\r\n                            onChange={(e) => setEditTitle(e.target.value)}\r\n                        />\r\n                        <label htmlFor='postBody'>Post:</label>\r\n                        <textarea\r\n                            id='postBody'\r\n                            required\r\n                            value={editBody}\r\n                            onChange={(e) => setEditBody(e.target.value)}\r\n                        />\r\n                        <button type='submit'>Submit</button>\r\n                    </form>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h2>Post Not Found</h2>\r\n                    <p>Well, that's disappointing</p>\r\n                    <p>\r\n                        <Link to='/'>Visit Our Homepage</Link>\r\n                    </p>\r\n                </>\r\n            )}\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default EditPost;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
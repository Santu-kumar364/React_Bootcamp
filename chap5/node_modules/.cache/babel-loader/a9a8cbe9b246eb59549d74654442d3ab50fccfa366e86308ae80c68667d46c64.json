{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANTU KUMAR\\\\react_bootcamp\\\\chap5\\\\src\\\\context\\\\DataContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext({});\nexport const DataProvider = ({\n  children\n}) => {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [editTitle, setEditTitle] = useState(\"\");\n  const [editBody, setEditBody] = useState(\"\");\n  const navigate = useNavigate();\n  const API_URL = \"http://localhost:3500/posts\"; // Direct API URL\n\n  // Fetch posts from JSON Server\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get(API_URL);\n        setPosts(response.data || []); // Ensure posts is always an array\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n        setPosts([]); // Set empty array on failure\n      }\n    };\n    fetchPosts();\n  }, []);\n\n  // Add new post\n  const handleAddPost = async (title, body) => {\n    const newPost = {\n      title,\n      body,\n      datetime: new Date().toLocaleString()\n    };\n    try {\n      const response = await axios.post(API_URL, newPost);\n      setPosts([...posts, response.data]); // Update state with new post\n      navigate(\"/\");\n    } catch (error) {\n      console.error(\"Error adding post:\", error);\n    }\n  };\n\n  // Delete post\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`${API_URL}/${id}`);\n      setPosts(posts.filter(post => post.id !== id));\n      navigate(\"/\");\n    } catch (error) {\n      console.error(\"Error deleting post:\", error);\n    }\n  };\n\n  // Edit post\n  const handleEdit = async id => {\n    const updatedPost = {\n      title: editTitle,\n      body: editBody,\n      datetime: new Date().toLocaleString()\n    };\n    try {\n      const response = await axios.put(`${API_URL}/${id}`, updatedPost);\n      setPosts(posts.map(post => post.id === id ? response.data : post));\n      navigate(\"/\");\n    } catch (error) {\n      console.error(\"Error editing post:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      search,\n      setSearch,\n      posts,\n      setPosts,\n      handleAddPost,\n      handleDelete,\n      handleEdit,\n      editTitle,\n      setEditTitle,\n      editBody,\n      setEditBody\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(DataProvider, \"vUSNUjazPndRcfyCoul4+F56K6Q=\", false, function () {\n  return [useNavigate];\n});\n_c = DataProvider;\nexport default DataContext;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","DataContext","DataProvider","children","_s","search","setSearch","posts","setPosts","editTitle","setEditTitle","editBody","setEditBody","navigate","API_URL","fetchPosts","response","get","data","error","console","handleAddPost","title","body","newPost","datetime","Date","toLocaleString","post","handleDelete","id","delete","filter","handleEdit","updatedPost","put","map","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SANTU KUMAR/react_bootcamp/chap5/src/context/DataContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst DataContext = createContext({});\r\n\r\nexport const DataProvider = ({ children }) => {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [posts, setPosts] = useState([]);\r\n    const [editTitle, setEditTitle] = useState(\"\");\r\n    const [editBody, setEditBody] = useState(\"\");\r\n\r\n    const navigate = useNavigate();\r\n    const API_URL = \"http://localhost:3500/posts\"; // Direct API URL\r\n\r\n    // Fetch posts from JSON Server\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const response = await axios.get(API_URL);\r\n                setPosts(response.data || []); // Ensure posts is always an array\r\n            } catch (error) {\r\n                console.error(\"Error fetching posts:\", error);\r\n                setPosts([]); // Set empty array on failure\r\n            }\r\n        };\r\n        fetchPosts();\r\n    }, []);\r\n    \r\n\r\n    // Add new post\r\n    const handleAddPost = async (title, body) => {\r\n        const newPost = {\r\n            title,\r\n            body,\r\n            datetime: new Date().toLocaleString(),\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post(API_URL, newPost);\r\n            setPosts([...posts, response.data]); // Update state with new post\r\n            navigate(\"/\");\r\n        } catch (error) {\r\n            console.error(\"Error adding post:\", error);\r\n        }\r\n    };\r\n\r\n    // Delete post\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            await axios.delete(`${API_URL}/${id}`);\r\n            setPosts(posts.filter(post => post.id !== id));\r\n            navigate(\"/\");\r\n        } catch (error) {\r\n            console.error(\"Error deleting post:\", error);\r\n        }\r\n    };\r\n\r\n    // Edit post\r\n    const handleEdit = async (id) => {\r\n        const updatedPost = {\r\n            title: editTitle,\r\n            body: editBody,\r\n            datetime: new Date().toLocaleString(),\r\n        };\r\n\r\n        try {\r\n            const response = await axios.put(`${API_URL}/${id}`, updatedPost);\r\n            setPosts(posts.map(post => (post.id === id ? response.data : post)));\r\n            navigate(\"/\");\r\n        } catch (error) {\r\n            console.error(\"Error editing post:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <DataContext.Provider value={{\r\n            search, setSearch,\r\n            posts, setPosts,\r\n            handleAddPost, handleDelete, handleEdit,\r\n            editTitle, setEditTitle,\r\n            editBody, setEditBody\r\n        }}>\r\n            {children}\r\n        </DataContext.Provider>\r\n    );\r\n};\r\n\r\nexport default DataContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}